---
authors: 
- David M. Miller
date: "2023-03-131T16:00:00Z"
description: We discuss the concept of a immunoprevention trial for CSCC
tags: 
  - Squamous Cell Carcinoma
categories: [2023, SoCO Research Forum]
image: figures/title_slide.jpg
format: 
  revealjs: 
    scrollable: true
bibliography: references.bib
---

## {background-image="figures/title_slide.jpg"}

## {visibility="hidden"}
::: {style="text-align: center; margin-top: 4em"}
[ICARUS]{style="color:red;"} <br> [I]{style="color:red;"}mmune [C]{style="color:red;"}heckpoint [A]{style="color:red;"}ntagonism to [R]{style="color:red;"}ed[U]{style="color:red;"}ce [S]{style="color:red;"}quamous cell carcinoma
:::

```{r}
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(gt)
library(plotly)

library(epiR)
library(NBDesign)
library(powerMediation)
library(PASSED)
```


```{r load redcap data, warning=FALSE, message=FALSE, echo=FALSE}
#| eval: true
library(tidyverse)
library(REDCapR)

```

```{r}
#| eval: false
# Load Data

 redcapr_dt <- REDCapR::redcap_read_oneshot(
   redcap_uri = "https://redcap.partners.org/redcap/api/",
   token = "F8C3B0C61D045F38C0C1AD1C4C218C50",
 )
 dt <- redcapr_dt$data
# saveRDS(
#   object = dt,
#   file = "soco_research_meeting_03_31_2023.rds"
# )
#
#
#dt <- readRDS(file = "soco_research_meeting_03_31_2023.rds")

dt[,2] <- stringr::str_replace_all(
  string = dt[,2],
  pattern = regex("_1"),
  replacement = ", "
)

dt[,2] <- stringr::str_replace_all(
  string = dt[,2],
  pattern = regex("_"),
  replacement = " "
)

dt[,2] <- stringr::str_to_title(
  string = dt[,2]
)

dt[,3] <- stringr::str_replace_all(
  string = dt[,3],
  pattern = regex("__"),
  replacement = "-"
)

dt[,3] <- stringr::str_replace_all(
  string = dt[,3],
  pattern = regex("_"),
  replacement = " "
)

dt[,3] <- stringr::str_to_title(
  string = dt[,3]
)

dt[,4] <- stringr::str_replace_all(
  string = dt[,4],
  pattern = regex("__"),
  replacement = "-"
)

dt[,4] <- stringr::str_replace_all(
  string = dt[,4],
  pattern = regex("_"),
  replacement = " "
)

dt[,4] <- stringr::str_to_title(
  string = dt[,4]
)
#
#dt[,5] <- stringr::str_replace_all(
#  string = dt[,5],
#  pattern = regex("__"),
#  replacement = "-"
#)
#
#dt[,5] <- stringr::str_replace_all(
#  string = dt[,5],
#  pattern = regex("_"),
#  replacement = " "
#)
#
#dt[,5] <- stringr::str_to_title(
#  string = dt[,5]
#)
#
#dt[,6] <- stringr::str_replace_all(
#  string = dt[,6],
#  pattern = regex("__"),
#  replacement = "-"
#)
#
#dt[,6] <- stringr::str_replace_all(
#  string = dt[,6],
#  pattern = regex("_"),
#  replacement = " "
#)
#
#dt[,6] <- stringr::str_to_title(
#  string = dt[,6]
#)
#
#dt[,7] <- stringr::str_replace_all(
#  string = dt[,7],
#  pattern = regex("__"),
#  replacement = "-"
#)
#
#dt[,7] <- stringr::str_replace_all(
#  string = dt[,7],
#  pattern = regex("_"),
#  replacement = " "
#)
#
#dt[,7] <- stringr::str_to_title(
#  string = dt[,7]
#)
#
#dt[,8] <- stringr::str_replace_all(
#  string = dt[,8],
#  pattern = regex("__"),
#  replacement = "-"
#)
#
#dt[,8] <- stringr::str_replace_all(
#  string = dt[,8],
#  pattern = regex("_"),
#  replacement = " "
#)
#
#
#dt[,8] <- stringr::str_to_title(
#  string = dt[,8]
#)
#
#dt[,9] <- stringr::str_replace_all(
#  string = dt[,9],
#  pattern = regex("__"),
#  replacement = "-"
#)
#
#dt[,9] <- stringr::str_replace_all(
#  string = dt[,9],
#  pattern = regex("_"),
#  replacement = " "
#)
#
#dt[,9] <- stringr::str_to_title(
#  string = dt[,9]
#)
#
#dt[,10] <- stringr::str_replace_all(
#  string = dt[,10],
#  pattern = regex("__"),
#  replacement = "-"
#)
#
#dt[,10] <- stringr::str_replace_all(
#  string = dt[,10],
#  pattern = regex("_"),
#  replacement = " "
#)
#
#dt[,10] <- stringr::str_to_title(
#  string = dt[,10]
#)

# dt[,11] <- stringr::str_replace_all(
#   string = dt[,11],
#   pattern = regex("_1"),
#   replacement = ", "
# )
# 
# dt[,11] <- stringr::str_replace_all(
#   string = dt[,11],
#   pattern = regex("_"),
#   replacement = " "
# )
# 
# dt[,11] <- stringr::str_to_title(
#   string = dt[,11]
# )
# 
# dt[,12] <- stringr::str_replace_all(
#   string = dt[,12],
#   pattern = regex("_1"),
#   replacement = ", "
# )
# 
# dt[,12] <- stringr::str_replace_all(
#   string = dt[,12],
#   pattern = regex("_"),
#   replacement = " "
# )
# 
# dt[,12] <- stringr::str_to_title(
#   string = dt[,12]
# )
# 

survey <- dt

```

## Survey Questions

::: {style="text-align: center; margin-top: 5em"}
[**REDCap Survey**]{style="font-size:80px"}

https://redcap.link/k77y3o9w

:::

## Role

```{r , echo=FALSE}

survey <- tribble(
  ~who_are_you, ~n,
  "Medical Oncologist", 2,
  "Surgical Dermatologist", 1,
  "Surgical Oncologist", 2,
  "Student/Trainee", 2,
  "Non Clinician Researcher", 2,
  "Medical Dermatologist",1
)

who_are_you <- survey |> drop_na(who_are_you) |> 
#  count(who_are_you) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(who_are_you = fct_reorder(who_are_you, n, .desc = TRUE))

who_are_you |> 
  ggplot(
    aes(x = who_are_you,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = who_are_you,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "Which of the following best describes you?",
    60)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(who_are_you$n + 0.1))
   ) +
  coord_flip() 


```

## CSCC Patient Care Experience

```{r , echo=FALSE}

survey <- tribble(
  ~patients_per_month, ~n,
  "1-10", 1,
  "11-20", 2,
  "I Am Not A Clinician", 3,
  "21-40", 3,
)

patients_per_month <- survey|> 
  drop_na(patients_per_month) |> 
#  filter(patients_per_month != "I Am Not A Clinician") |> 
#  count(patients_per_month) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(patients_per_month = ifelse(patients_per_month == "Greater Than 60", ">60", patients_per_month)) |> 
  mutate(patients_per_month = fct_reorder(patients_per_month, n, .desc = TRUE)
  )

patients_per_month |> 
  ggplot(
    aes(x = patients_per_month,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = patients_per_month,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "How many patients with CSCC do you take care of per month?",
    45)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(patients_per_month$n + 0.1))
   ) +
  coord_flip() 


```

## CSCC Patient Care Experience

```{r , echo=FALSE}

survey <- tribble(
  ~ans_patients_per_month, ~n,
  "6-10", 1,
  "11-20", 1,
  "I Am Not A Clinician", 3,
  "1-5", 3
)

ans_patients_per_month <- survey|> 
  drop_na(ans_patients_per_month) |> 
 # filter(ans_patients_per_month != "I Am Not A Clinician") |> 
#  count(ans_patients_per_month) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(ans_patients_per_month = ifelse(ans_patients_per_month == "Greater Than 60", ">60", ans_patients_per_month)) |> 
  mutate(ans_patients_per_month = fct_reorder(ans_patients_per_month, n, .desc = TRUE)
  )

ans_patients_per_month |> 
  ggplot(
    aes(x = ans_patients_per_month,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = ans_patients_per_month,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "How many patients with Actinic Neoplasia Syndrome do you take care of per month?",
    45)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(ans_patients_per_month$n + 0.1))
   ) +
  coord_flip() 


```

## CSCC Patient Care Experience

```{r , echo=FALSE}

survey <- tribble(
  ~cscc_patients_per_month, ~n,
  "11-20", 2,
  "I Am Not A Clinician", 3,
  "1-5", 4
)

cscc_patients_per_month <- survey|> 
  drop_na(cscc_patients_per_month) |> 
 # filter(cscc_patients_per_month != "I Am Not A Clinician") |> 
#  count(cscc_patients_per_month) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(cscc_patients_per_month = ifelse(cscc_patients_per_month == "Greater Than 60", ">60", cscc_patients_per_month)) |> 
  mutate(cscc_patients_per_month = fct_reorder(cscc_patients_per_month, n, .desc = TRUE)
  )

cscc_patients_per_month |> 
  ggplot(
    aes(x = cscc_patients_per_month,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = cscc_patients_per_month,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "How many patients with a history of ≥10 NMSCs and ≥5 CSCCs in the past 3 years or 4 CSCCs in the past year do you take care of each month?",
    45)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(cscc_patients_per_month$n + 0.1))
   ) +
  coord_flip() 


```

## Overview

:::: {.columns}

::: {.column width="50%"}
- Hypothesis
- Rationale
- Schema
  - Schema rationale
- Efficacy Assessment
  - Statistical analysis
- Sample Size Calculations 

:::

::: {.column width="50%"}
- Eligibility Criteria
- Treatment Considerations
- Alternative Approach
:::

::::

## Hypothesis 
- Anti-PD1 therapy will decrease the development of CSCC in high-risk patients with a history of multiple NMSCs

## Rationale
::: incremental
- Effective preventive strategies to mitigate CSCC are lacking
- Anti-PD1 therapy has shown to be effective in the neoadjuvant and advanced setting
- Intervention earlier in the disease journey will improve outcomes for patients at high-risk for morbid disease
:::

## {background-image="figures/schema_1.jpg"}

## {background-image="figures/schema_2.jpg"}

## {background-image="figures/schema_3.jpg"}

## {background-image="figures/schema_4.jpg"}

## {background-image="figures/schema_5.jpg"}

## {background-image="figures/schema_6.jpg"}

## Schema - Rationale
::: incremental
- Feasibility
  - Patients with ≥10 NMSCS (≥5 CSCCs) enriches for patients at high risk for recurrent disease
  - Active surveillance for high-risk patients involves q3-6 month TSE (minimizes extra visits)
- Bias
  - Placebo
     - Important to reduce bias when outcome is determined by physical exam & not scans
- Efficacy Assessment
  - Primary Endpoint: Rate of new KCC is an established endpoint (e.g.ONTRAC & ONTRANS (NEJM 2015/2023))

:::

## Efficacy Assessment
::: incremental
- Primary endpoint
  - Rate of new CSCC 
    - count data
- Modeling count variables
  - Poisson regression
  - Negative binomial regression 
    - Similar structure as Poisson, but has an extra parameter to model over-dispersion
      - When the observed variance is higher than the variance of the theoretical model
        - Common in real-world data sets are populations are often heterogeneous and non-uniform
:::

## Efficacy Assessment
::: incremental
```{r}
#| eval: false
#| echo: true
library(MASS)

glm.nb(
  formula = `New CSCCs` ~ Treatment + `Baseline CSCCs` + `CLL` + `Previous Radiation`,
  init.theta = 0.75
)
```

:::

## Secondary Endpoints
::: incremental
- Number of new basal-cell carcinomas & actinic keratoses during the 12-month intervention period
- The number of new non-melanoma skin cancers in the 6-month post intervention period
- Safety of anti-PDX as assessed by the numbers and types of adverse events
:::

## Sample Size Calculations

- Considerations
  - Sample size will vary depending on:
      - baseline event rate  
      - effect size

## Sample Size Calculations

- Example #1

```{r}
#| echo: true
#| code-line-numbers: "2,3"

n <- ynegbinomsize(
  r0=7.0, # event rate group 1 (Placebo)
  r1=4.9, # event rate group 2 (Treatment with 30% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
```

Total Sample Size: `r n$XN[1]`

::: footer
Calculating sample size based on using a Negative Binomial Regression Model (using `NBDesign` Package).
:::

## Sample Size Calculations

- Example #2

```{r}
#| echo: true
#| code-line-numbers: "2,3"

n <- ynegbinomsize(
  r0=2.6, # event rate group 1 (Placebo)
  r1=1.8, # event rate group 2 (Treatment with 30% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
```

Total Sample Size: `r n$XN[1]`

::: footer
Calculating sample size based on using a Negative Binomial Regression Model (using `NBDesign` Package).
:::

## Sample Size Calculations

- Example #3

```{r}
#| echo: true
#| code-line-numbers: "2,3"

n <- ynegbinomsize(
  r0=2.0, # event rate group 1 (Placebo)
  r1=1.4, # event rate group 2 (Treatment with 30% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
```

Total Sample Size: `r n$XN[1]`

::: footer
Calculating sample size based on using a Negative Binomial Regression Model (using `NBDesign` Package).
:::

## Sample Size Calculations

- Example #4

```{r}
#| echo: true
#| code-line-numbers: "2,3"

n <- ynegbinomsize(
  r0=2.0, # event rate group 1 (Placebo)
  r1=1.2, # event rate group 2 (Treatment with 40% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
```

Total Sample Size: `r n$XN[1]`

::: footer
Calculating sample size based on using a Negative Binomial Regression Model (using `NBDesign` Package).
:::

## Sample Size Parameters

```{r sample size}
#| message: false
#| warning: false
#| eval: false
library(epiR)
library(NBDesign)
library(powerMediation)
library(PASSED)

n <- epiR::epi.sscohortt(
  FT = NA, # 1 year follow up
  irexp1 = 1.4, # 30% risk reduction
  irexp0 = 2, # Baseline event rate
  n = NA,
  power = 0.8,
  r = 1,
  design = 1,
  sided.test = 2,
  nfractional = FALSE,
  conf.level = 0.95
)

n$n.total

n1.1 <- n$n.total*1.1 

##calculating the sample sizes
x <- 1

abc <- ynegbinomsize(
  r0=4,
  r1=2.8,
  shape1=.75,
  pi1=0.5,
  alpha=0.05,
  twosided=1, # two sided
  beta=0.2,
  fixedfu=1,
  type=4,
  u=c(0.5,0.5,1), # Recruitment rate (number of subjects per site per month, i think)
  ut=c(0.5,1.0,1.5), # recruitment interval
  tfix=4, #fixed study duration, often equals to recruitment time plus minimum follow-up
  maxfu=1,
  tchange=c(0,0.5,1),
  ratec1=c(0.1,0.2,0.1), # piecewise constant drop-out rate for the treatment
  ratec0=c(0.1,0.2,0.1), # piecewise constant drop-out rate for the control
  eps=1.0e-03)

abc$XN[1]
```

```{r sample size functions}
#| message: false
#| warning: false
#| echo: false
sample_size_reduction20 <- function(x){
  
  n <- ynegbinomsize(
  r0=x, # event rate group 1 (Placebo)
  r1=x*.8, # event rate group 2 (Treatment with 40% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
  
###Zhu and Lakkis's sample sizes (i.e. with approximation) 
n$XN[1]
}

sample_size_reduction25 <- function(x){
  
  n <- ynegbinomsize(
  r0=x, # event rate group 1 (Placebo)
  r1=x*.75, # event rate group 2 (Treatment with 40% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
  
###Zhu and Lakkis's sample sizes (i.e. with approximation) 
n$XN[1]
}

sample_size_reduction30 <- function(x){
  
  n <- ynegbinomsize(
  r0=x, # event rate group 1 (Placebo)
  r1=x*.7, # event rate group 2 (Treatment with 40% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
  
###Zhu and Lakkis's sample sizes (i.e. with approximation) 
n$XN[1]
}

sample_size_reduction40 <- function(x){
  
  n <- ynegbinomsize(
  r0=x, # event rate group 1 (Placebo)
  r1=x*.6, # event rate group 2 (Treatment with 40% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
  
###Zhu and Lakkis's sample sizes (i.e. with approximation) 
n$XN[1]
}

sample_size_reduction50 <- function(x){
  
  n <- ynegbinomsize(
  r0=x, # event rate group 1 (Placebo)
  r1=x*.5, # event rate group 2 (Treatment with 40% rate reduction)
  shape1=0.75, pi1=0.5, alpha=0.05, twosided=1, beta=0.2, 
  fixedfu=1, type=4, u=c(0.5,0.5,1), ut=c(0.5,1.0,1.5), 
  tfix=5, maxfu=1, tchange=1,ratec1=.1, ratec0=.1, eps=1.0e-03)
  
###Zhu and Lakkis's sample sizes (i.e. with approximation) 
n$XN[1]
}

```

```{r}
#| message: false
#| warning: false
#| echo: false
rr_20 <- purrr::map(
  .x = c(0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 
  .f = sample_size_reduction20
  )
rr_20 <- dplyr::tibble(rr_20)

baseline_event_rate <- c(0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

sample_size <- cbind(baseline_event_rate, rr_20)

rr_25 <- purrr::map(
  .x = c(0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 
  .f = sample_size_reduction25
  )
rr_25 <- dplyr::tibble(rr_25)

sample_size <- cbind(sample_size, rr_25)


rr_30 <- purrr::map(
  .x = c(0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 
  .f = sample_size_reduction30
  )

rr_30 <- dplyr::tibble(rr_30)

sample_size <- sample_size |> dplyr::bind_cols(rr_30)

rr_40 <- purrr::map(
  .x = c(0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 
  .f = sample_size_reduction40
  )

rr_40 <- dplyr::tibble(rr_40)

sample_size <- sample_size |> dplyr::bind_cols(rr_40)

rr_50 <- purrr::map(
  .x = c(0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 
  .f = sample_size_reduction50
  )

rr_50 <- dplyr::tibble(rr_50)

sample_size <- sample_size |> dplyr::bind_cols(rr_50)


```

```{r}
#| message: false
#| warning: false
#| echo: false
sample_size$baseline_event_rate <- as.numeric(sample_size$baseline_event_rate)
sample_size$rr_20 <- as.numeric(sample_size$rr_20)
sample_size$rr_25 <- as.numeric(sample_size$rr_25)
sample_size$rr_30 <- as.numeric(sample_size$rr_30)
sample_size$rr_40 <- as.numeric(sample_size$rr_40)
sample_size$rr_50 <- as.numeric(sample_size$rr_50)

col_names <- c("Baseline Event Rate",
               "20% Risk Reduction",
               "25% Risk Reduction",
               "30% Risk Reduction",
               "40% Risk Reduction",
               "50% Risk Reduction"
)

colnames(sample_size) <- col_names
```

```{r}
#| fig-width: 11
#| fig-height: 6
p <- sample_size |> ggplot() +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `20% Risk Reduction`),
    color = "red") +
    geom_point(
    aes(x = `Baseline Event Rate`,
        y = `20% Risk Reduction`),
    color = "red") +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `25% Risk Reduction`),
    color = "blue") +
  geom_point(
    aes(x = `Baseline Event Rate`,
        y = `25% Risk Reduction`),
    color = "blue") +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `30% Risk Reduction`),
    color = "purple") +
  geom_point(
    aes(x = `Baseline Event Rate`,
        y = `30% Risk Reduction`),
    color = "purple") +
  geom_path(
      aes(x = `Baseline Event Rate`,
          y = `40% Risk Reduction`),
      color = "orange") +
    geom_point(
      aes(x = `Baseline Event Rate`,
          y = `40% Risk Reduction`), 
      color = "orange") +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `50% Risk Reduction`),
    color = "green") +
    geom_point(
    aes(x = `Baseline Event Rate`,
        y = `50% Risk Reduction`), 
    color = "green") +
  theme_classic() +
  scale_y_continuous(
    limits = c(0, 1900),
    breaks = c(0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000)
  ) +
  scale_x_continuous(
    limits = c(0, 10),
    breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
  ) +
  ylab("Sample Size (Total)") +
  xlab("New CSCC per year (Placebo)") +
  theme(legend.position = "bottom") +
  annotate(
    geom = "text",
    x = 8,
    y = 720,
    label = "20% Risk Reduction"
  )  +
  annotate(
    geom = "text",
    x = 8,
    y = 410,
    label = "25% Risk Reduction"
  ) +
  annotate(
    geom = "text",
    x = 8,
    y = 280,
    label = "30% Risk Reduction"
  ) +
  annotate(
    geom = "text",
    x = 8,
    y = 150,
    label = "40% Risk Reduction"
  ) +
  annotate(
    geom = "text",
    x = 8,
    y = 90,
    label = "50% Risk Reduction"
  ) 

plotly::ggplotly(p = p) %>%
    layout(hoverlabel = list(font=list(size=24))) 
```

## Sample Size Parameters {visibility="hidden"}

```{r}
#| message: false
#| warning: false
#| echo: false
#| fig-width: 11
#| fig-height: 6
#| fig-align: center
#| include: true
p <- sample_size |> ggplot() +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `20% Risk Reduction`),
    color = "red") +
    geom_point(
    aes(x = `Baseline Event Rate`,
        y = `20% Risk Reduction`),
    color = "red") +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `25% Risk Reduction`),
    color = "blue") +
    geom_point(
    aes(x = `Baseline Event Rate`,
        y = `25% Risk Reduction`),
    color = "blue") +
    geom_path(
    aes(x = `Baseline Event Rate`,
        y = `30% Risk Reduction`),
    color = "purple") +
    geom_point(
    aes(x = `Baseline Event Rate`,
        y = `30% Risk Reduction`),
    color = "purple") +
  geom_path(
      aes(x = `Baseline Event Rate`,
          y = `40% Risk Reduction`),
      color = "orange") +
    geom_point(
      aes(x = `Baseline Event Rate`,
          y = `40% Risk Reduction`), 
      color = "orange") +
  geom_path(
    aes(x = `Baseline Event Rate`,
        y = `50% Risk Reduction`),
    color = "green") +
    geom_point(
    aes(x = `Baseline Event Rate`,
        y = `50% Risk Reduction`), 
    color = "green") +
  theme_classic() +
  scale_y_continuous(
    limits = c(0, 500),
    breaks = c(0, 100, 200, 300, 400, 500)
  ) +
  scale_x_continuous(
    limits = c(0, 10),
    breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
  ) +
  ylab("Sample Size (Total)") +
  xlab("New CSCC per year (Placebo)") +
  theme(legend.position = "bottom") +
  annotate(
    geom = "text",
    x = 8,
    y = 420,
    label = "25% Risk Reduction"
  ) +
  annotate(
    geom = "text",
    x = 8,
    y = 280,
    label = "30% Risk Reduction"
  ) +
  annotate(
    geom = "text",
    x = 8,
    y = 150,
    label = "40% Risk Reduction"
  ) +
  annotate(
    geom = "text",
    x = 8,
    y = 90,
    label = "50% Risk Reduction"
  ) 

plotly::ggplotly(
  p
)

```

## Background on NMSC Incidence {.scrollable}

::: incremental
-   Risk of subsequent NMSC is proportional to numbers of previously diagnosed skin cancers
-   In one study, the five year risk of developing another skin cancer was estimated at \>60% for individuals with two previous skin cancers and at \>90% for individuals with 4-5 previous skin cancers[@karagas1992]
-   In ONTRAC, patients receiving placebo developed on average 2.4 NMSCs (0.7 CSCCs) in 12 months[@Chen2015]
    -   Inclusion: ≥2 NMSCs in the previous 5 years
    -   Actual Baseline: 7.9 ± 8.0 NMSCs, 2.1 ± 3.5 CSCCs in Placebo
-   In ONTRANS, patients receiving placebo developed on average 2.7 NMSCs (1.9 CSCCs) in 12 months[@Allen2023]
    -   Inclusion: ≥2 NMSCs in the previous 5 years
    -   Actual Baseline: 7.5 ± 7.6 NMSCs, 4.8 ± 5.6 CSCCs in Placebo
:::

## Eligibility Criteria
::: incremental
- Inclusion
  - At least 10 NMSC, ≥5 CSCCs
  - ECOG 0, 1 or 2
- Exclusion 
  - Previous ICI
  - Active pharmacological immunosuppression
  - HIV with detectable viral loads (undetectable dz allowed)
  - Field treatment with the past 4 weeks
  - Nicotinamide use within the past 3 months

:::

## Calculating the sample sizes {visibility="hidden"}

```{r}
#| message: false
#| warning: false
#| echo: false
abc <- ynegbinomsize(
  r0=7,
  r1=4.9,
  shape1=.75,
  pi1=0.5,
  alpha=0.05,
  twosided=1, # two sided
  beta=0.2,
  fixedfu=1,
  type=4,
  u=c(0.5,0.5,1), # Recruitment rate (number of subjects per site per month, i think)
  ut=c(0.5,1.0,1.5), # recruitment interval
  tfix=4, #fixed study duration, often equals to recruitment time plus minimum follow-up
  maxfu=1,
  tchange=c(1),
  ratec1=c(0.1), # piecewise constant drop-out rate for the treatment
  ratec0=c(0.1), # piecewise constant drop-out rate for the control
  eps=1.0e-03)


###Zhu and Lakkis's sample sizes (i.e. with approximation) 
abc$XN
###Our sample sizes (i.e. without approximation)
abc$tildeXN





##calculating the sample sizes
abc <- ynegbinomsize(
  r0=7,
  r1=4.9,
  shape0=.75,
  pi1=0.5,
  alpha=0.05,
  twosided=1,
  beta=0.2,
  fixedfu=1,
  type=4,
  u=1,
  ut=1,
  tfix=11,
  maxfu=1.5,
  tchange=0,
  ratec1=0.1,
  eps=1.0e-03)


###Zhu and Lakkis's sample sizes (i.e. with approximation) 
abc$XN
###Our sample sizes (i.e. without approximation)
abc$tildeXN

```

```{r}
#| message: false
#| warning: false
#| echo: false
dt <- matrix(c(206, 210, 79, 79),2)

epi.2by2(dat = dt, method = "cross.sectional", digits = 2)

epi.conf(
  dat = dt,
  ctype = "inc.rate", method = "exact"
)

```

```{r}
#| message: false
#| warning: false
#| echo: false
# Poisson Distribution, lambda is the expected value in the given time, so if we think there will be 2.6 new skin cancers
#define range of "successes"
success <- 0:20

#create plot of probability mass function
plot(success, dpois(success, lambda=2.6), type='h')

poisson.test(5,3)
```

```{r}
power_NegativeBinomial(
  mu1 = 4.9, # Expected rate of events per time unit for group 1
  mu2 = 7, # Expected rate of events per time unite for group 2
  theta = .8, 
  power = 0.8,
  sig.level = 0.05)

```

## Treatment Considerations

## ICI Antibody Characteristics
::: incremental
- For most ICIs (except ipilimumab), there is no clear relationship between dose and efficacy or safety
- The dose-response and exposure-response curves showed an obvious plateau, possilby implying that increasing doses do not contribute to tumor control
:::

## ICI Antibody Characteristics {.smaller}

```{r}
ici <- tribble(
  ~Target, ~Drug, ~"Half-life", ~"Dose", ~"Schedule",
  "CTLA-4","Ipilimumab","~15 days", "3 mg/kg", "q3 weeks",
  "CTLA-4","Ipilimumab","~15 days", "10 mg/kg", "q3 weeks",
  "PD-1","Nivolumab","~25 days", "240 mg", "q2 weeks",
  "PD-1","Nivolumab","~25 days", "480 mg", "q4 weeks",
  "PD-1","Pembrolizumab","~25 days", "200 mg", "q3 weeks",
  "PD-1","Pembrolizumab","~25 days", "400 mg", "q6 weeks",
  "PD-1","Cemiplimab","~19 days", "350 mg", "q3 weeks",
  "PD-1","Retinfanlimab","~18 days", "500 mg", "q4 weeks",
  "PD-L1","Avelumab", "~4 days", "800 mg", "q2 weeks",
  "PD-L1","Atezolizumab", "~27 days", "840 mg", "q2 weeks",
  "PD-L1","Atezolizumab", "~27 days", "1200 mg", "q3 weeks",
  "PD-L1","Atezolizumab", "~27 days", "1680 mg", "q4 weeks",
  "PD-L1","Durvalumab", "~18 days", "10 mg/kg", "q2 weeks",
  "PD-L1","Durvalumab", "~18 days", "1500 mg", "q4 weeks"
)

ici_gt <- ici |> 
    gt() |> 
  tab_header(
    title = md('**ICI Characteristics**')
    ) |> 
  opt_align_table_header(align = "center") |> 
  cols_align(align = "center")   |>
  cols_label(
    Target = md('**Target**'),
    Drug = md('**Drug**'),
    `Half-life` = md('**Half-life**'),
    Dose = md('**Dose**'),
    Schedule = md('**Schedule**')
  )

ici_gt |> as_raw_html()
```

```{r}
dose_efficacy <- tribble(
  ~"Target", ~"Drug", ~"Indication", ~"Dose", ~"ORR (%)",~"PFS (% at 2 years)", ~"G3-G4 toxicity", ~"References",
  "CTLA-4","Ipilimumab","Melanoma", "0.3 mg/kg Q3W", "0", "2.7", "", "",
  "CTLA-4","Ipilimumab","Melanoma", "3 mg/kg Q3W", "4.2-19", "12.9", "15-27.3", "",
  "CTLA-4","Ipilimumab","Melanoma", "10 mg/kg Q3W", "11.1-15", "18.9", "31-34", "",
  "PD-1","Nivolumab","Melanoma", "0.1 mg/kg Q2W", "29-35", "40-41", "0-5", "",
  "PD-1","Nivolumab","Melanoma", "0.3 mg/kg Q2W", "19-28", "31-35", "0-3", "",
  "PD-1","Nivolumab","Melanoma", "1 mg/kg Q2W", "30-31", "45-51", "6-12", "",
  "PD-1","Nivolumab","NSCLC", "1 mg/kg Q2W", "3-6", "24-46", "15.2", "",
  "PD-1","Nivolumab","NSCLC", "3 mg/kg Q2W", "24-32", "40-41", "13.5", "",
  "PD-1","Nivolumab","NSCLC", "10 mg/kg Q2W", "18-20", "24-33", "13.6", "",
  "PD-1","Nivolumab","RCC", "0.3 mg/kg Q2W", "20", "30", "18.2", "",
  "PD-1","Nivolumab","RCC", "1 mg/kg Q2W", "24-28", "47-50", "12", "",
  "PD-1","Nivolumab","RCC", "2 mg/kg Q2W", "22", "30", "17", "",
  "PD-1","Nivolumab","RCC", "10 mg/kg Q2W", "31", "67", "13", "",
  "PD-1","Pembrolizumab","Melanoma", "2 mg/kg Q3W", "21-32.9", "45", "8-15", "",
  "PD-1","Pembrolizumab","Melanoma", "10 mg/kg Q2W", "33.7-52", "", "13.3-22.8", "",
  "PD-1","Pembrolizumab","Melanoma", "10 mg/kg Q3W", "26-35.9", "37", "3.6-15", "",
  "PD-1","Pembrolizumab","NSCLC", "2 mg/kg Q3W", "15-25", "", "13", "",
  "PD-1","Pembrolizumab","NSCLC", "10 mg/kg Q2W", "19.3-21", "", "9", "",
  "PD-1","Pembrolizumab","NSCLC", "10 mg/kg Q3W", "19.2-25", "", "9", "",
)
```

```{r}
dose_efficacy_toxicity <- tribble(
  ~"Target", ~"Drug", ~"Indication", ~"Dose", ~"N", ~"# of Responders", ~"ORR (%)",~"mPFS", ~"mOS", ~"G3-G4 toxicity", ~"References",
  "PD-1","Nivolumab","Melanoma", "0.1 mg/kg Q2W", "17", "6", "", "3.6", "16.2", "29.4", "@Topalian2014",
  "PD-1","Nivolumab","Melanoma", "0.3 mg/kg Q2W", "18", "5", "", "1.9", "12.5", "16.7", "@Topalian2014",
  "PD-1","Nivolumab","Melanoma", "1.0 mg/kg Q2W", "35", "11", "", "9.1", "25.3", "14.3", "@Topalian2014",
  "PD-1","Nivolumab","Melanoma", "3.0 mg/kg Q2W", "17", "7", "", "9.7", "20.3", "35.3", "@Topalian2014",
  "PD-1","Nivolumab","Melanoma", "10.0 mg/kg Q2W", "20", "4", "", "3.7", "11.7", "25.0", "@Topalian2014",
  "PD-1","Nivolumab","Melanoma", "1.0 mg/kg Q2W", "10", "3", "", "", "", "", "@weber2013",
  "PD-1","Nivolumab","Melanoma", "3.0 mg/kg Q2W", "13", "4", "", "", "", "", "@weber2013",
  "PD-1","Nivolumab","Melanoma", "10.0 mg/kg Q2W", "11", "1", "", "", "", "", "@weber2013"
)


dose_efficacy_toxicity$N <- as.numeric(dose_efficacy_toxicity$N)
dose_efficacy_toxicity$`# of Responders` <- as.numeric(dose_efficacy_toxicity$`# of Responders`)
dose_efficacy_toxicity <- dose_efficacy_toxicity |> 
  mutate(`ORR (%)` = round(`# of Responders`/N *100))

dose_efficacy_toxicity$`Dose (mg/kg)` <- str_extract(
  string = dose_efficacy_toxicity$Dose,
  pattern = regex("^[0-9]{1,2}\\.[0-9]{1,2}")
  )

dose_efficacy_toxicity$`Dose (mg/kg)` <- as.numeric(dose_efficacy_toxicity$`Dose (mg/kg)`)
```

```{r}
dose_efficacy_gt <- dose_efficacy |> 
  select(-References) |> 
  gt() |> 
  tab_header(
    title = md('**Dose-Efficacy**')
    ) |> 
  opt_align_table_header(align = "center") |> 
  cols_align(align = "center")   |>
  cols_label(
    Target = md('**Target**'),
    Drug = md('**Drug**'),
    Indication = md('**Indication**'),
    Dose = md('**Dose**'),
    `ORR (%)` = md('**ORR (%)**'),
    `PFS (% at 2 years)` = md('**PFS (% at 2 years)**'),
    `G3-G4 toxicity` = md('**G3-G4 toxicity (%)**')
 #   References = md('**References**')
  )

```

## ICI Dose Response {.smaller}

```{r}

dose_efficacy_gt |> as_raw_html()
```

## ICI Dose Response {.smaller}

```{r}
dose_efficacy_gt_style <- dose_efficacy_gt |> 
 tab_style(
    style = cell_fill(color = "lightblue"),
    locations = cells_body(rows = Drug == "Ipilimumab" & Indication == "Melanoma")
  ) |> 
   tab_style(
    style = cell_fill(color = "lightgreen"),
    locations = cells_body(rows = Drug == "Nivolumab" & Indication == "Melanoma")
  ) |> 
   tab_style(
    style = cell_fill(color = "lightyellow"),
    locations = cells_body(rows = Drug == "Nivolumab" & Indication == "NSCLC")
  ) |>
   tab_style(
    style = cell_fill(color = "salmon"),
    locations = cells_body(rows = Drug == "Nivolumab" & Indication == "RCC")
  ) |> 
   tab_style(
    style = cell_fill(color = "beige"),
    locations = cells_body(rows = Drug == "Pembrolizumab" & Indication == "Melanoma")
  ) |> 
   tab_style(
    style = cell_fill(color = "pink"),
    locations = cells_body(rows = Drug == "Pembrolizumab" & Indication == "NSCLC")
  ) 


dose_efficacy_gt_style |> as_raw_html()
```

## 
```{r}
#| fig-height: 7
p <- dose_efficacy_toxicity |> ggplot(
  mapping = aes(
    x = `Dose (mg/kg)`,
    y = `ORR (%)`
  )
) +
  geom_point() +
  theme_classic() +
  scale_y_continuous(
    limits = c(-20,101)
  )

q <- p +
  geom_smooth()
plotly::ggplotly(
  p = p
) %>%
    layout(title = "<b>Dose-Response: Nivolumab in Melanoma<b>",
           titlefont = list(size = 28, color = "black", family = "Arial")) %>%
    layout(showlegend = FALSE,
           xaxis = list(tickfont = list(size = 16)))  %>%
    layout(hoverlabel = list(font=list(size=20))) |> 
    layout(margin = list(
      t = 80,
      b = 0,
      r = 0,
      l = 0
    ))
```

## 
```{r}
#| fig-height: 7

plotly::ggplotly(
  p = q
) %>%
    layout(title = "<b>Dose-Response: Nivolumab in Melanoma<b>",
           titlefont = list(size = 28, color = "black", family = "Arial")) %>%
    layout(showlegend = FALSE,
           xaxis = list(tickfont = list(size = 16)))  %>%
    layout(hoverlabel = list(font=list(size=20))) |> 
    layout(margin = list(
      t = 80,
      b = 0,
      r = 0,
      l = 0
    ))
```


## Background {visibility="hidden"}

To model count data, we can use a poisson distribution, as count data are not continuous (they're whole numbers), and thus a poisson regression. However, Poisson regression assumes that the variance of y equals the mean of y. A dispersion parameter of 1 means that that mean = variance. However, in many real-world data sets, the variance is greater than the mean, and this is called "overdispersion". A hint of this is if the residual deviance in your model is equal to the degrees of freedom. Dispersion Parameter == Sum of Squared Pearson Residuals / df. Overdispersion can result in underestimation of the standard error (more likely to have a false positive). Causes of overdispersion include predictor variables that are not included in the model; clustering or heterogeneity in the sampled population.

Negative binomial model is a poisson model but allowing parameter k. Variance = mean + mean^2^/k. Only works for overdispersion, not underdispersion. (can also choose a quasi-poisson)


## Alterative Approach

## {background-image="figures/pilot_1.jpg"}

## {background-image="figures/pilot_2.jpg"}

## {background-image="figures/pilot_3.jpg"}

## {background-image="figures/pilot_4.jpg"}

## {background-image="figures/pilot_5.jpg"}

## {background-image="figures/pilot_6.jpg"}

## {background-image="figures/pilot_7.jpg"}

## {background-image="figures/pilot_8.jpg"}

## {background-image="figures/pilot_9.jpg"}


## Inclusion Criteria

```{r , echo=FALSE}
#| eval: true

#survey_1 <- survey |> drop_na(number_csccs)

#saveRDS(object = survey_1, file = "files/post_mtg_survey.rds")

survey <- readRDS(file = "files/post_mtg_survey.rds")

dt <- survey

dt[,2] <- stringr::str_replace_all(
  string = dt[,2],
  pattern = regex("_1"),
  replacement = ", "
)

dt[,2] <- stringr::str_replace_all(
  string = dt[,2],
  pattern = regex("_"),
  replacement = " "
)

dt[,2] <- stringr::str_to_title(
  string = dt[,2]
)

dt[,3] <- stringr::str_replace_all(
  string = dt[,3],
  pattern = regex("__"),
  replacement = "-"
)

dt[,3] <- stringr::str_replace_all(
  string = dt[,3],
  pattern = regex("_"),
  replacement = " "
)

dt[,3] <- stringr::str_to_title(
  string = dt[,3]
)

dt[,4] <- stringr::str_replace_all(
  string = dt[,4],
  pattern = regex("__"),
  replacement = "-"
)

dt[,4] <- stringr::str_replace_all(
  string = dt[,4],
  pattern = regex("_"),
  replacement = " "
)

dt[,4] <- stringr::str_to_title(
  string = dt[,4]
)


dt[,5] <- stringr::str_replace_all(
  string = dt[,5],
  pattern = regex("__"),
  replacement = "-"
)

dt[,5] <- stringr::str_replace_all(
  string = dt[,5],
  pattern = regex("_"),
  replacement = " "
)

dt[,5] <- stringr::str_to_title(
  string = dt[,5]
)

survey <- dt

number_csccs <- survey|> 
  tidyr::drop_na(number_csccs) |> 
 # filter(number_csccs != "I Am Not A Clinician") |> 
  count(number_csccs) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(number_csccs = ifelse(number_csccs == "Greater Than 10", ">10", number_csccs)) |> 
  mutate(number_csccs = fct_reorder(number_csccs, n, .desc = TRUE)
  )

number_csccs |> 
  ggplot(
    aes(x = number_csccs,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = number_csccs,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "To be included in the study, a patient should have at least this many CSCCs in the past year? ",
    45)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(number_csccs$n + 0.1))
   ) +
  coord_flip() 


```

## Open ICARUS

```{r, warning=FALSE, echo=FALSE}
#| eval: true
open_icarus <- survey|> 
  tidyr::drop_na(open_icarus) |> 
  count(open_icarus) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(open_icarus = fct_reorder(open_icarus, n, .desc = TRUE)
  )

open_icarus |> 
  ggplot(
    aes(x = open_icarus,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = open_icarus,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "Would you recommend that ICARUS be opened at your center?",
    50)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 25)) +
 scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(open_icarus$n + 0.1))
   ) +
  coord_flip()

```

## Inclusion Criteria

```{r , echo=FALSE}
#| eval: true
icarus_recruitment <- survey|> 
  drop_na(icarus_recruitment) |> 
 # filter(icarus_recruitment != "I Am Not A Clinician") |> 
  count(icarus_recruitment) |> 
  mutate(prop = round(n/sum(n)*100)) |> 
  mutate(icarus_recruitment = ifelse(icarus_recruitment == "Atleast 10", "≥10", icarus_recruitment)) |> 
  mutate(icarus_recruitment = fct_reorder(icarus_recruitment, n, .desc = TRUE)
  )

icarus_recruitment |> 
  ggplot(
    aes(x = icarus_recruitment,
        y = n)
  ) + 
  geom_col(fill = "steelblue4") + 
  geom_text(
    aes(x = icarus_recruitment,
        y = n,
        label = paste(prop,"%", sep = ""),
        hjust= -0.1)
    ) +
  ggtitle(str_wrap(
    "How many patients do you think you could recruit to ICARUS per year?",
    45)
    ) +
  xlab("") +
  ylab("Number of Respondents") +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  ) +
  theme(title = element_text(face = "bold", size = 18)) +
  theme(axis.title.x = element_text(face = "bold", size = 16)) +
  theme(axis.text.x = element_text(face = "bold", size = 14)) +
  theme(axis.title.y = element_text(face = "bold", size = 16)) +
  theme(axis.text.y = element_text(face = "bold", size = 14)) +
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(), 
        axis.line = element_line()) +
  theme(plot.margin = margin(
    t = 0.2, r = 0, b = 0.2, l = 0, 
    "cm")) +
 scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_y_continuous(
   breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))),
   limits = c(0, max(icarus_recruitment$n + 0.1))
   ) +
  coord_flip() 


```

## References
